import React, { useState } from 'react';

const StageLense = () => {
  const [plot, setPlot] = useState('');
  const [recommendations, setRecommendations] = useState(null);
  const [loading, setLoading] = useState(false);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    try {
      const response = await fetch('http://localhost:8000/api/recommend/', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ plot }),
      });
      const data = await response.json();
      setRecommendations(data);
    } catch (error) {
      console.error('Error:', error);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-cover bg-center p-8" style={{ 
      backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), 
      url('/api/placeholder/1920/1080')` 
    }}>
      <div className="max-w-4xl mx-auto">
        <div className="bg-black bg-opacity-40 backdrop-blur-lg rounded-xl p-8 shadow-xl">
          <div className="text-center mb-8">
            <h1 className="text-5xl font-bold text-white mb-4">Stage Lense</h1>
            <p className="text-white text-lg">
              당신의 이야기로 찾아가는 특별한 공연
            </p>
          </div>

          <form onSubmit={handleSubmit} className="mb-8">
            <div className="mb-4">
              <textarea
                value={plot}
                onChange={(e) => setPlot(e.target.value)}
                className="w-full h-32 p-4 rounded-lg bg-black bg-opacity-50 text-white placeholder-gray-400 border border-white border-opacity-30 focus:outline-none focus:ring-2 focus:ring-white"
                placeholder="보고 싶은 이야기를 들려주세요..."
                required
              />
            </div>
            <button
              type="submit"
              className="w-full bg-white text-black font-bold py-3 px-6 rounded-lg transition duration-300 hover:bg-opacity-90"
              disabled={loading}
            >
              {loading ? "검색중..." : "공연 찾기"}
            </button>
          </form>

          {recommendations && (
            <div className="space-y-6">
              <h2 className="text-2xl font-bold text-white mb-4">
                추천 공연
              </h2>
              <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
                {recommendations.map((item) => (
                  <div
                    key={item.mt20id}
                    className="bg-black bg-opacity-50 backdrop-blur-md rounded-lg p-6 transform hover:scale-105 transition duration-300"
                  >
                    <div className="mb-4">
                      <h3 className="text-xl font-bold text-white">{item.prfnm}</h3>
                    </div>
                    <div className="space-y-2 text-gray-200">
                      <p>{item.genrenm}</p>
                      <p>{item.fcltynm}</p>
                      <p>{`${item.prfpdfrom} ~ ${item.prfpdto}`}</p>
                    </div>
                    <button 
                      className="mt-4 w-full bg-white text-black font-bold py-2 px-4 rounded-lg transition duration-300 hover:bg-opacity-90"
                      onClick={() => window.open(item.booking_url, '_blank')}
                    >
                      예매하기
                    </button>
                  </div>
                ))}
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default StageLense;